name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  main:
    name: Nx Cloud - Main Job
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.10
    with:
      number-of-agents: 3
      init-commands: |
        yarn nx-cloud start-ci-run --stop-agents-after="build" --agent-count=3
      parallel-commands: |
        yarn nx-cloud record -- yarn nx workspace-lint
        yarn nx-cloud record -- yarn nx format:check
      parallel-commands-on-agents: |
        yarn nx affected --target=lint --parallel=3
        yarn nx affected --target=test --parallel=3 --ci --code-coverage
        yarn nx affected --target=build --parallel=3

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.10
    with:
      number-of-agents: 3

  build_and_test_browser_extension:
    needs: [main]
    runs-on: ubuntu-latest
    name: Build and test the Multiverse Wallet browser extension
    steps:
      - uses: actions/checkout@v3

      - name: Export Build Date
        run: echo "BUILD=$(date '+%Y-%m-%d')-$(git log -n1 --format="%h")" >> $GITHUB_ENV

      - name: Install node and yarn based on the volta config in our package.json
        uses: volta-cli/action@v4

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build the browser extension
        env:
          MANIFEST_KEY: ${{ secrets.MANIFEST_KEY }}
        run: yarn build-extension

      - run: mkdir -p ./tmp/browser-extension

      - name: Zip the contents of ./dist/apps/wallet-unpacked to ./tmp/wallet-unpacked
        run: npx ts-node --project=tools/tsconfig.tools.json tools/utils/zip-unpacked-browser-extension.ts

      - name: Store the zip file as an artifact for the run
        uses: actions/upload-artifact@v3
        with:
          name: multiverse-wallet
          path: ./tmp/multiverse-wallet.zip

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BUILD }}
          release_name: Multiverse Wallet Browser Extension
          draft: false
          prerelease: false
          body: |
            Multiverse Wallet - Development Build - ${{ env.BUILD }}

      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tmp/multiverse-wallet.zip
          asset_name: multiverse-wallet.zip
          asset_content_type: application/zip
